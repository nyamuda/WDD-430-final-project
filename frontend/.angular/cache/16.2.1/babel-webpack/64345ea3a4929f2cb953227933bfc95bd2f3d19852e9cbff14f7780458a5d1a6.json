{"ast":null,"code":"\"use strict\";\n\nvar _class;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContactUsService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst core_1 = require(\"@angular/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"ngx-toastr\"));\nconst i3 = tslib_1.__importStar(require(\"../app.service\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/router\"));\nclass ContactUsService {\n  constructor(http, toastrService, appService, router) {\n    this.http = http;\n    this.toastrService = toastrService;\n    this.appService = appService;\n    this.router = router;\n    this.isContacting = (0, core_1.signal)(false);\n    //clear the form once the booking is a success\n    this.isMessageSuccess = new rxjs_1.BehaviorSubject(false);\n  }\n  contact(contact) {\n    //show loader\n    this.isContacting.set(true);\n    const url = 'http://localhost:8000/contact';\n    const headers = new http_1.HttpHeaders().set('Content-Type', 'application/json');\n    let contactDto = {\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n      message: contact.message\n    };\n    this.http.post(url, contactDto, {\n      headers\n    }).subscribe(response => {\n      //disable loading button\n      this.isContacting.set(false);\n      let message = \"Your message has been submitted successfully. We'll get back to you soon.\";\n      this.appService.showSuccessToast(message, '', 'bottom-center');\n      this.isMessageSuccess.next(true);\n      this.router.navigateByUrl('/contact');\n    }, error => {\n      //show toast\n      //show toast\n      let message = error['error']['message'] ? error['error']['message'] : error['error']['error'] ? error['error']['error'] : 'Sorry, your message could not be sent. Please refresh the page and retry.';\n      this.appService.showFailureToast(message, 'Submission failed', 'bottom-center');\n      //disable loading button\n      this.isContacting.set(false);\n    });\n  }\n}\n_class = ContactUsService;\n_class.ɵfac = function ContactUsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.AppService), i0.ɵɵinject(i4.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexports.ContactUsService = ContactUsService;","map":{"version":3,"names":["http_1","require","core_1","rxjs_1","ContactUsService","constructor","http","toastrService","appService","router","isContacting","signal","isMessageSuccess","BehaviorSubject","contact","set","url","headers","HttpHeaders","contactDto","name","email","phone","message","post","subscribe","response","showSuccessToast","next","navigateByUrl","error","showFailureToast","i0","ɵɵinject","i1","HttpClient","i2","ToastrService","i3","AppService","i4","Router","factory","ɵfac","providedIn","exports"],"sources":["C:\\Users\\Pierce T. Nyamuda\\Documents\\BYUI Courses\\spring2023\\Angular\\final-project\\frontend\\src\\app\\contact-us\\contact-us.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, WritableSignal, signal } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Contact } from './contact.model';\n\nimport { AppService } from '../app.service';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactUsService {\n  public isContacting: WritableSignal<boolean> = signal(false);\n  //clear the form once the booking is a success\n  public isMessageSuccess = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private http: HttpClient,\n    private toastrService: ToastrService,\n    private appService: AppService,\n    private router: Router\n  ) {}\n\n  contact(contact: Contact) {\n    //show loader\n    this.isContacting.set(true);\n\n    const url = 'http://localhost:8000/contact';\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n    let contactDto = {\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n      message: contact.message,\n    };\n    this.http.post(url, contactDto, { headers }).subscribe(\n      (response) => {\n        //disable loading button\n        this.isContacting.set(false);\n        let message =\n          \"Your message has been submitted successfully. We'll get back to you soon.\";\n        this.appService.showSuccessToast(message, '', 'bottom-center');\n        this.isMessageSuccess.next(true);\n        this.router.navigateByUrl('/contact');\n      },\n      (error) => {\n        //show toast\n        //show toast\n        let message = error['error']['message']\n          ? error['error']['message']\n          : error['error']['error']\n          ? error['error']['error']\n          : 'Sorry, your message could not be sent. Please refresh the page and retry.';\n        this.appService.showFailureToast(\n          message,\n          'Submission failed',\n          'bottom-center'\n        );\n        //disable loading button\n        this.isContacting.set(false);\n      }\n    );\n  }\n}\n"],"mappings":";;;;;;;;AAAA,MAAAA,MAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AAOA,MAAAE,MAAA,GAAAF,OAAA;;;;;;AAEA,MAGaG,gBAAgB;EAK3BC,YACUC,IAAgB,EAChBC,aAA4B,EAC5BC,UAAsB,EACtBC,MAAc;IAHd,KAAAH,IAAI,GAAJA,IAAI;IACJ,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IART,KAAAC,YAAY,GAA4B,IAAAR,MAAA,CAAAS,MAAM,EAAC,KAAK,CAAC;IAC5D;IACO,KAAAC,gBAAgB,GAAG,IAAIT,MAAA,CAAAU,eAAe,CAAU,KAAK,CAAC;EAO1D;EAEHC,OAAOA,CAACA,OAAgB;IACtB;IACA,IAAI,CAACJ,YAAY,CAACK,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMC,GAAG,GAAG,+BAA+B;IAC3C,MAAMC,OAAO,GAAG,IAAIjB,MAAA,CAAAkB,WAAW,EAAE,CAACH,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAEzE,IAAII,UAAU,GAAG;MACfC,IAAI,EAAEN,OAAO,CAACM,IAAI;MAClBC,KAAK,EAAEP,OAAO,CAACO,KAAK;MACpBC,KAAK,EAAER,OAAO,CAACQ,KAAK;MACpBC,OAAO,EAAET,OAAO,CAACS;KAClB;IACD,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAACR,GAAG,EAAEG,UAAU,EAAE;MAAEF;IAAO,CAAE,CAAC,CAACQ,SAAS,CACnDC,QAAQ,IAAI;MACX;MACA,IAAI,CAAChB,YAAY,CAACK,GAAG,CAAC,KAAK,CAAC;MAC5B,IAAIQ,OAAO,GACT,2EAA2E;MAC7E,IAAI,CAACf,UAAU,CAACmB,gBAAgB,CAACJ,OAAO,EAAE,EAAE,EAAE,eAAe,CAAC;MAC9D,IAAI,CAACX,gBAAgB,CAACgB,IAAI,CAAC,IAAI,CAAC;MAChC,IAAI,CAACnB,MAAM,CAACoB,aAAa,CAAC,UAAU,CAAC;IACvC,CAAC,EACAC,KAAK,IAAI;MACR;MACA;MACA,IAAIP,OAAO,GAAGO,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GACnCA,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GACzBA,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GACvBA,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GACvB,2EAA2E;MAC/E,IAAI,CAACtB,UAAU,CAACuB,gBAAgB,CAC9BR,OAAO,EACP,mBAAmB,EACnB,eAAe,CAChB;MACD;MACA,IAAI,CAACb,YAAY,CAACK,GAAG,CAAC,KAAK,CAAC;IAC9B,CAAC,CACF;EACH;;SApDWX,gBAAgB;;mBAAhBA,MAAgB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,UAAA,GAAAP,EAAA,CAAAC,QAAA,CAAAO,EAAA,CAAAC,MAAA;AAAA;;SAAhBrC,MAAgB;EAAAsC,OAAA,EAAhBtC,MAAgB,CAAAuC,IAAA;EAAAC,UAAA,EAFf;AAAM;AADpBC,OAAA,CAAAzC,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}