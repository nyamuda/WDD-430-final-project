{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Pierce T. Nyamuda/Documents/BYUI Courses/spring2023/Angular/final-project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class, _class2, _class3, _class4, _class5, _class6;\nimport { defaultModules, QUILL_CONFIG_TOKEN } from 'ngx-quill/config';\nexport * from 'ngx-quill/config';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, EventEmitter, inject, ElementRef, ChangeDetectorRef, PLATFORM_ID, Renderer2, NgZone, SecurityContext, Directive, Input, Output, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, isObservable, firstValueFrom, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, mergeMap, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nfunction _class3_ng_template_0_pre_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 3);\n  }\n}\nfunction _class3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class3_ng_template_0_pre_0_Template, 1, 0, \"pre\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.preserve)(\"ngIfElse\", _r2);\n  }\n}\nfunction _class3_ng_template_2_pre_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 3);\n  }\n}\nfunction _class3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class3_ng_template_2_pre_0_Template, 1, 0, \"pre\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.preserve)(\"ngIfElse\", _r2);\n  }\n}\nfunction _class3_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n  }\n}\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nfunction _class5_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 1);\n  }\n}\nfunction _class5_pre_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 1);\n  }\n}\nconst getFormat = (format, configFormat) => {\n  const passedFormat = format || configFormat;\n  return passedFormat || 'html';\n};\nclass QuillService {\n  constructor(injector, config) {\n    var _this = this;\n    this.config = config;\n    this.quill$ = defer( /*#__PURE__*/_asyncToGenerator(function* () {\n      if (!_this.Quill) {\n        // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n        // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n        // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n        const maybePatchedAddEventListener = _this.document.addEventListener;\n        // There're 2 types of Angular applications:\n        // 1) zone-full (by default)\n        // 2) zone-less\n        // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n        // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n        // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n        // this means the `zone.js` is not imported.\n        // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n        // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n        _this.document.addEventListener =\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        _this.document['__zone_symbol__addEventListener'] || _this.document.addEventListener;\n        const quillImport = yield import( /* webpackChunkName: 'quill' */'quill');\n        _this.document.addEventListener = maybePatchedAddEventListener;\n        _this.Quill = quillImport.default ? quillImport.default : quillImport;\n      }\n      // Only register custom options and modules once\n      _this.config.customOptions?.forEach(customOption => {\n        const newCustomOption = _this.Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        _this.Quill.register(newCustomOption, true, _this.config.suppressGlobalRegisterWarning);\n      });\n      return yield _this.registerCustomModules(_this.Quill, _this.config.customModules, _this.config.suppressGlobalRegisterWarning);\n    })).pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.document = injector.get(DOCUMENT);\n    if (!this.config) {\n      this.config = {\n        modules: defaultModules\n      };\n    }\n  }\n  getQuill() {\n    return this.quill$;\n  }\n  /**\n   * Marked as internal so it won't be available for `ngx-quill` consumers, this is only\n   * internal method to be used within the library.\n   *\n   * @internal\n   */\n  registerCustomModules(Quill, customModules, suppressGlobalRegisterWarning) {\n    return _asyncToGenerator(function* () {\n      if (Array.isArray(customModules)) {\n        // eslint-disable-next-line prefer-const\n        for (let {\n          implementation,\n          path\n        } of customModules) {\n          // The `implementation` might be an observable that resolves the actual implementation,\n          // e.g. if it should be lazy loaded.\n          if (isObservable(implementation)) {\n            implementation = yield firstValueFrom(implementation);\n          }\n          Quill.register(path, implementation, suppressGlobalRegisterWarning);\n        }\n      }\n      // Return `Quill` constructor so we'll be able to re-use its return value except of using\n      // `map` operators, etc.\n      return Quill;\n    })();\n  }\n}\n_class = QuillService;\n_class.ɵfac = function _class_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n};\n_class.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [QUILL_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\nclass QuillEditorBase {\n  constructor() {\n    this.required = false;\n    this.customToolbarPosition = 'top';\n    this.styles = null;\n    this.strict = true;\n    this.customOptions = [];\n    this.customModules = [];\n    this.preserveWhitespace = false;\n    this.trimOnValidation = false;\n    this.compareValues = false;\n    this.filterNull = false;\n    /*\n    https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n           provide default empty value\n    by default null\n           e.g. defaultEmptyValue=\"\" - empty string\n           <quill-editor\n      defaultEmptyValue=\"\"\n      formControlName=\"message\"\n    ></quill-editor>\n    */\n    this.defaultEmptyValue = null;\n    this.onEditorCreated = new EventEmitter();\n    this.onEditorChanged = new EventEmitter();\n    this.onContentChanged = new EventEmitter();\n    this.onSelectionChanged = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.disabled = false; // used to store initial value before ViewInit\n    this.preserve = false;\n    this.toolbarPosition = 'top';\n    this.subscription = null;\n    this.quillSubscription = null;\n    this.elementRef = inject(ElementRef);\n    this.document = inject(DOCUMENT);\n    this.cd = inject(ChangeDetectorRef);\n    this.domSanitizer = inject(DomSanitizer);\n    this.platformId = inject(PLATFORM_ID);\n    this.renderer = inject(Renderer2);\n    this.zone = inject(NgZone);\n    this.service = inject(QuillService);\n    this.valueGetter = (quillEditor, editorElement) => {\n      let html = editorElement.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      let modelValue = html;\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'text') {\n        modelValue = quillEditor.getText();\n      } else if (format === 'object') {\n        modelValue = quillEditor.getContents();\n      } else if (format === 'json') {\n        try {\n          modelValue = JSON.stringify(quillEditor.getContents());\n        } catch (e) {\n          modelValue = quillEditor.getText();\n        }\n      }\n      return modelValue;\n    };\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'html') {\n        const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n        if (sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n        }\n        return quillEditor.clipboard.convert(value);\n      } else if (format === 'json') {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return [{\n            insert: value\n          }];\n        }\n      }\n      return value;\n    };\n    this.selectionChangeHandler = (range, oldRange, source) => {\n      const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n      // only emit changes when there's any listener\n      if (!this.onBlur.observed && !this.onFocus.observed && !this.onSelectionChanged.observed && !shouldTriggerOnModelTouched) {\n        return;\n      }\n      this.zone.run(() => {\n        if (range === null) {\n          this.onBlur.emit({\n            editor: this.quillEditor,\n            source\n          });\n        } else if (oldRange === null) {\n          this.onFocus.emit({\n            editor: this.quillEditor,\n            source\n          });\n        }\n        this.onSelectionChanged.emit({\n          editor: this.quillEditor,\n          oldRange,\n          range,\n          source\n        });\n        if (shouldTriggerOnModelTouched) {\n          this.onModelTouched();\n        }\n        this.cd.markForCheck();\n      });\n    };\n    this.textChangeHandler = (delta, oldDelta, source) => {\n      // only emit changes emitted by user interactions\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n      let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      const trackChanges = this.trackChanges || this.service.config.trackChanges;\n      const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n      // only emit changes when there's any listener\n      if (!this.onContentChanged.observed && !shouldTriggerOnModelChange) {\n        return;\n      }\n      this.zone.run(() => {\n        if (shouldTriggerOnModelChange) {\n          this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n        }\n        this.onContentChanged.emit({\n          content,\n          delta,\n          editor: this.quillEditor,\n          html,\n          oldDelta,\n          source,\n          text\n        });\n        this.cd.markForCheck();\n      });\n    };\n    // eslint-disable-next-line max-len\n    this.editorChangeHandler = (event, current, old, source) => {\n      // only emit changes when there's any listener\n      if (!this.onEditorChanged.observed) {\n        return;\n      }\n      // only emit changes emitted by user interactions\n      if (event === 'text-change') {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n        if (html === '<p><br></p>' || html === '<div><br></div>') {\n          html = this.defaultEmptyValue;\n        }\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text\n          });\n          this.cd.markForCheck();\n        });\n      } else {\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source\n          });\n          this.cd.markForCheck();\n        });\n      }\n    };\n  }\n  static normalizeClassNames(classes) {\n    const classList = classes.trim().split(' ');\n    return classList.reduce((prev, cur) => {\n      const trimmed = cur.trim();\n      if (trimmed) {\n        prev.push(trimmed);\n      }\n      return prev;\n    }, []);\n  }\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n    this.toolbarPosition = this.customToolbarPosition;\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n    // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n    this.quillSubscription = this.service.getQuill().pipe(mergeMap(Quill => {\n      const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n      const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n      if (beforeRender) {\n        promises.push(beforeRender());\n      }\n      return Promise.all(promises).then(() => Quill);\n    })).subscribe(Quill => {\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n      const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      if (toolbarElem) {\n        modules.toolbar = toolbarElem;\n      } else if (modules.toolbar === undefined) {\n        modules.toolbar = defaultModules.toolbar;\n      }\n      let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n      if (placeholder === undefined) {\n        placeholder = 'Insert text here ...';\n      }\n      if (this.styles) {\n        Object.keys(this.styles).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n      if (this.classes) {\n        this.addClasses(this.classes);\n      }\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n      if (!bounds) {\n        bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n      }\n      let debug = this.debug;\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n      let readOnly = this.readOnly;\n      if (!readOnly && this.readOnly !== false) {\n        readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n      }\n      let defaultEmptyValue = this.defaultEmptyValue;\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n        defaultEmptyValue = this.service.config.defaultEmptyValue;\n      }\n      let scrollingContainer = this.scrollingContainer;\n      if (!scrollingContainer && this.scrollingContainer !== null) {\n        scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n      }\n      let formats = this.formats;\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? [...this.service.config.formats] : this.service.config.formats === null ? null : undefined;\n      }\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          bounds,\n          debug: debug,\n          formats: formats,\n          modules,\n          placeholder,\n          readOnly,\n          defaultEmptyValue,\n          scrollingContainer: scrollingContainer,\n          strict: this.strict,\n          theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n        });\n        // Set optional link placeholder, Quill has no native API for it so using workaround\n        if (this.linkPlaceholder) {\n          const tooltip = this.quillEditor?.theme?.tooltip;\n          const input = tooltip?.root?.querySelector('input[data-link]');\n          if (input?.dataset) {\n            input.dataset.link = this.linkPlaceholder;\n          }\n        }\n      });\n      if (this.content) {\n        const format = getFormat(this.format, this.service.config.format);\n        if (format === 'text') {\n          this.quillEditor.setText(this.content, 'silent');\n        } else {\n          const newValue = this.valueSetter(this.quillEditor, this.content);\n          this.quillEditor.setContents(newValue, 'silent');\n        }\n        this.quillEditor.getModule('history').clear();\n      }\n      // initialize disabled status based on this.disabled as default value\n      this.setDisabledState();\n      this.addQuillEventListeners();\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observed && !this.onValidatorChanged) {\n        return;\n      }\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        if (this.onValidatorChanged) {\n          this.onValidatorChanged();\n        }\n        this.onEditorCreated.emit(this.quillEditor);\n        this.onEditorCreated.complete();\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.dispose();\n    this.quillSubscription?.unsubscribe();\n    this.quillSubscription = null;\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue);\n    }\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;\n    }\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue = changes.defaultEmptyValue.currentValue;\n    }\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue;\n      const previousStyling = changes.styles.previousValue;\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach(key => {\n          this.renderer.removeStyle(this.editorElem, key);\n        });\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n    }\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue;\n      const previousClasses = changes.classes.previousValue;\n      if (previousClasses) {\n        this.removeClasses(previousClasses);\n      }\n      if (currentClasses) {\n        this.addClasses(currentClasses);\n      }\n    }\n    // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n    if (changes.debounceTime) {\n      this.addQuillEventListeners();\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n  }\n\n  addClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.addClass(this.editorElem, c);\n    });\n  }\n  removeClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.removeClass(this.editorElem, c);\n    });\n  }\n  writeValue(currentValue) {\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return;\n    }\n    this.content = currentValue;\n    if (!this.quillEditor) {\n      return;\n    }\n    const format = getFormat(this.format, this.service.config.format);\n    const newValue = this.valueSetter(this.quillEditor, currentValue);\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents();\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return;\n      }\n    }\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue);\n      } else {\n        this.quillEditor.setContents(newValue);\n      }\n      return;\n    }\n    this.quillEditor.setText('');\n  }\n  setDisabledState(isDisabled = this.disabled) {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled;\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable();\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable();\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n      }\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  registerOnValidatorChange(fn) {\n    this.onValidatorChanged = fn;\n  }\n  validate() {\n    if (!this.quillEditor) {\n      return null;\n    }\n    const err = {};\n    let valid = true;\n    const text = this.quillEditor.getText();\n    // trim text if wanted + handle special case that an empty editor contains a new line\n    const textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;\n    const deltaOperations = this.quillEditor.getContents().ops;\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n      valid = false;\n    }\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n      valid = false;\n    }\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      };\n      valid = false;\n    }\n    return valid ? null : err;\n  }\n  addQuillEventListeners() {\n    this.dispose();\n    // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription();\n      this.subscription.add(\n      // mark model as touched if editor lost focus\n      fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n        this.selectionChangeHandler(range, oldRange, source);\n      }));\n      // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n      let textChange$ = fromEvent(this.quillEditor, 'text-change');\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n      }\n      this.subscription.add(\n      // update model if text changes\n      textChange$.subscribe(([delta, oldDelta, source]) => {\n        this.textChangeHandler(delta, oldDelta, source);\n      }));\n      this.subscription.add(\n      // triggered if selection or text changed\n      editorChange$.subscribe(([event, current, old, source]) => {\n        this.editorChangeHandler(event, current, old, source);\n      }));\n    });\n  }\n  dispose() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n_class2 = QuillEditorBase;\n_class2.ɵfac = function _class2_Factory(t) {\n  return new (t || _class2)();\n};\n_class2.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _class2,\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    readOnly: \"readOnly\",\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    required: \"required\",\n    formats: \"formats\",\n    customToolbarPosition: \"customToolbarPosition\",\n    sanitize: \"sanitize\",\n    beforeRender: \"beforeRender\",\n    styles: \"styles\",\n    strict: \"strict\",\n    scrollingContainer: \"scrollingContainer\",\n    bounds: \"bounds\",\n    customOptions: \"customOptions\",\n    customModules: \"customModules\",\n    trackChanges: \"trackChanges\",\n    preserveWhitespace: \"preserveWhitespace\",\n    classes: \"classes\",\n    trimOnValidation: \"trimOnValidation\",\n    linkPlaceholder: \"linkPlaceholder\",\n    compareValues: \"compareValues\",\n    filterNull: \"filterNull\",\n    debounceTime: \"debounceTime\",\n    defaultEmptyValue: \"defaultEmptyValue\",\n    valueGetter: \"valueGetter\",\n    valueSetter: \"valueSetter\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\",\n    onEditorChanged: \"onEditorChanged\",\n    onContentChanged: \"onContentChanged\",\n    onSelectionChanged: \"onSelectionChanged\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorBase, [{\n    type: Directive\n  }], null, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    customToolbarPosition: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    beforeRender: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    trackChanges: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    classes: [{\n      type: Input\n    }],\n    trimOnValidation: [{\n      type: Input\n    }],\n    linkPlaceholder: [{\n      type: Input\n    }],\n    compareValues: [{\n      type: Input\n    }],\n    filterNull: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    defaultEmptyValue: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    onEditorChanged: [{\n      type: Output\n    }],\n    onContentChanged: [{\n      type: Output\n    }],\n    onSelectionChanged: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    valueGetter: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillEditorComponent extends QuillEditorBase {}\n_class3 = QuillEditorComponent;\n_class3.ɵfac = /* @__PURE__ */function () {\n  let ɵ_class3_BaseFactory;\n  return function _class3_Factory(t) {\n    return (ɵ_class3_BaseFactory || (ɵ_class3_BaseFactory = i0.ɵɵgetInheritedFactory(_class3)))(t || _class3);\n  };\n}();\n_class3.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class3,\n  selectors: [[\"quill-editor\"]],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => _class3)\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => _class3)\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  ngContentSelectors: _c1,\n  decls: 5,\n  vars: 2,\n  consts: [[3, \"ngIf\"], [\"noPreserveTpl\", \"\"], [\"quill-editor-element\", \"\", 4, \"ngIf\", \"ngIfElse\"], [\"quill-editor-element\", \"\"]],\n  template: function _class3_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵtemplate(0, _class3_ng_template_0_Template, 1, 2, \"ng-template\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, _class3_ng_template_2_Template, 1, 2, \"ng-template\", 0);\n      i0.ɵɵtemplate(3, _class3_ng_template_3_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition !== \"top\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition === \"top\");\n    }\n  },\n  dependencies: [CommonModule, i1.NgIf],\n  styles: [\"[_nghost-%COMP%]{display:inline-block}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.Emulated,\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }],\n      selector: 'quill-editor',\n      template: `\n    <ng-template [ngIf]=\"toolbarPosition !== 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n    <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n    <ng-template [ngIf]=\"toolbarPosition === 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n    <ng-template #noPreserveTpl>\n      <div quill-editor-element></div>\n    </ng-template>\n  `,\n      standalone: true,\n      imports: [CommonModule],\n      styles: [\":host{display:inline-block}\\n\"]\n    }]\n  }], null, null);\n})();\nclass QuillViewHTMLComponent {\n  constructor(sanitizer, service) {\n    this.sanitizer = sanitizer;\n    this.service = service;\n    this.content = '';\n    this.innerHTML = '';\n    this.themeClass = 'ql-snow';\n  }\n  ngOnChanges(changes) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    }\n    if (changes.content) {\n      const content = changes.content.currentValue;\n      const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n      this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n  }\n}\n_class4 = QuillViewHTMLComponent;\n_class4.ɵfac = function _class4_Factory(t) {\n  return new (t || _class4)(i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(QuillService));\n};\n_class4.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class4,\n  selectors: [[\"quill-view-html\"]],\n  inputs: {\n    content: \"content\",\n    theme: \"theme\",\n    sanitize: \"sanitize\"\n  },\n  standalone: true,\n  features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]],\n  template: function _class4_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [CommonModule, i1.NgClass],\n  styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view-html',\n      template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n      standalone: true,\n      imports: [CommonModule],\n      styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i2.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: QuillService\n    }];\n  }, {\n    content: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillViewComponent {\n  constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.strict = true;\n    this.customModules = [];\n    this.customOptions = [];\n    this.preserveWhitespace = false;\n    this.onEditorCreated = new EventEmitter();\n    this.preserve = false;\n    this.quillSubscription = null;\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      let content = value;\n      if (format === 'text') {\n        quillEditor.setText(content);\n      } else {\n        if (format === 'html') {\n          const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n          if (sanitize) {\n            value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n          }\n          content = quillEditor.clipboard.convert(value);\n        } else if (format === 'json') {\n          try {\n            content = JSON.parse(value);\n          } catch (e) {\n            content = [{\n              insert: value\n            }];\n          }\n        }\n        quillEditor.setContents(content);\n      }\n    };\n  }\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue);\n    }\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    this.quillSubscription = this.service.getQuill().pipe(mergeMap(Quill => {\n      const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n      const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n      if (beforeRender) {\n        promises.push(beforeRender());\n      }\n      return Promise.all(promises).then(() => Quill);\n    })).subscribe(Quill => {\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      modules.toolbar = false;\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      let debug = this.debug;\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n      let formats = this.formats;\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;\n      }\n      const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          debug: debug,\n          formats: formats,\n          modules,\n          readOnly: true,\n          strict: this.strict,\n          theme\n        });\n      });\n      this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n      if (this.content) {\n        this.valueSetter(this.quillEditor, this.content);\n      }\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observers.length) {\n        return;\n      }\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        this.onEditorCreated.emit(this.quillEditor);\n        this.onEditorCreated.complete();\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.quillSubscription?.unsubscribe();\n    this.quillSubscription = null;\n  }\n}\n_class5 = QuillViewComponent;\n_class5.ɵfac = function _class5_Factory(t) {\n  return new (t || _class5)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n_class5.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class5,\n  selectors: [[\"quill-view\"]],\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    formats: \"formats\",\n    sanitize: \"sanitize\",\n    beforeRender: \"beforeRender\",\n    strict: \"strict\",\n    content: \"content\",\n    customModules: \"customModules\",\n    customOptions: \"customOptions\",\n    preserveWhitespace: \"preserveWhitespace\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\"\n  },\n  standalone: true,\n  features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"quill-view-element\", \"\", 4, \"ngIf\"], [\"quill-view-element\", \"\"]],\n  template: function _class5_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, _class5_div_0_Template, 1, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, _class5_pre_1_Template, 1, 0, \"pre\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.preserve);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.preserve);\n    }\n  },\n  dependencies: [CommonModule, i1.NgIf],\n  styles: [\".ql-container.ngx-quill-view{border:0}\\n\"],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view',\n      template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`,\n      standalone: true,\n      imports: [CommonModule],\n      styles: [\".ql-container.ngx-quill-view{border:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }, {\n      type: i2.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    beforeRender: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }]\n  });\n})();\nclass QuillModule {\n  static forRoot(config) {\n    return {\n      ngModule: QuillModule,\n      providers: [{\n        provide: QUILL_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n}\n_class6 = QuillModule;\n_class6.ɵfac = function _class6_Factory(t) {\n  return new (t || _class6)();\n};\n_class6.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _class6\n});\n_class6.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillModule, [{\n    type: NgModule,\n    args: [{\n      imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent };","map":{"version":3,"names":["defaultModules","QUILL_CONFIG_TOKEN","i0","Injectable","Optional","Inject","EventEmitter","inject","ElementRef","ChangeDetectorRef","PLATFORM_ID","Renderer2","NgZone","SecurityContext","Directive","Input","Output","forwardRef","Component","ViewEncapsulation","NgModule","i1","DOCUMENT","isPlatformServer","CommonModule","i2","DomSanitizer","defer","isObservable","firstValueFrom","Subscription","fromEvent","shareReplay","mergeMap","debounceTime","NG_VALUE_ACCESSOR","NG_VALIDATORS","_class3_ng_template_0_pre_0_Template","rf","ctx","ɵɵelement","_class3_ng_template_0_Template","ɵɵtemplate","ctx_r0","ɵɵnextContext","_r2","ɵɵreference","ɵɵproperty","preserve","_class3_ng_template_2_pre_0_Template","_class3_ng_template_2_Template","ctx_r1","_class3_ng_template_3_Template","_c0","_c1","_class5_div_0_Template","_class5_pre_1_Template","getFormat","format","configFormat","passedFormat","QuillService","constructor","injector","config","_this","quill$","_asyncToGenerator","Quill","maybePatchedAddEventListener","document","addEventListener","quillImport","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","registerCustomModules","customModules","pipe","bufferSize","refCount","get","modules","getQuill","Array","isArray","implementation","path","_class","ɵfac","_class_Factory","t","ɵɵinject","Injector","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","undefined","decorators","QuillEditorBase","required","customToolbarPosition","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","toolbarPosition","subscription","quillSubscription","elementRef","cd","domSanitizer","platformId","renderer","zone","service","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","e","valueSetter","value","sanitize","includes","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observed","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","classList","trim","split","reduce","prev","cur","trimmed","push","ngOnInit","ngAfterViewInit","promises","beforeRender","Promise","all","then","subscribe","nativeElement","toolbarElem","Object","assign","toolbar","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","theme","linkPlaceholder","tooltip","input","root","dataset","link","setText","newValue","setContents","getModule","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","complete","ngOnDestroy","dispose","unsubscribe","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","length","deltaOperations","ops","onlyEmptyOperation","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","add","textChange$","editorChange$","_class2","_class2_Factory","ɵdir","ɵɵdefineDirective","inputs","outputs","features","ɵɵNgOnChangesFeature","QuillEditorComponent","_class3","ɵ_class3_BaseFactory","_class3_Factory","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","selectors","standalone","ɵɵProvidersFeature","multi","provide","useExisting","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","_class3_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵtemplateRefExtractor","ɵɵadvance","dependencies","NgIf","encapsulation","Emulated","providers","selector","imports","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","_class4","_class4_Factory","ɵɵdirectiveInject","_class4_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵsanitizeHtml","NgClass","None","QuillViewComponent","observers","_class5","_class5_Factory","_class5_Template","QuillModule","forRoot","ngModule","useValue","_class6","_class6_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["C:/Users/Pierce T. Nyamuda/Documents/BYUI Courses/spring2023/Angular/final-project/frontend/node_modules/ngx-quill/fesm2022/ngx-quill.mjs"],"sourcesContent":["import { defaultModules, QUILL_CONFIG_TOKEN } from 'ngx-quill/config';\nexport * from 'ngx-quill/config';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, EventEmitter, inject, ElementRef, ChangeDetectorRef, PLATFORM_ID, Renderer2, NgZone, SecurityContext, Directive, Input, Output, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, isObservable, firstValueFrom, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, mergeMap, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.quill$ = defer(async () => {\n            if (!this.Quill) {\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                this.document.addEventListener =\n                    // eslint-disable-next-line @typescript-eslint/dot-notation\n                    this.document['__zone_symbol__addEventListener'] ||\n                        this.document.addEventListener;\n                const quillImport = await import(/* webpackChunkName: 'quill' */ 'quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n            }\n            // Only register custom options and modules once\n            this.config.customOptions?.forEach((customOption) => {\n                const newCustomOption = this.Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n            });\n            return await this.registerCustomModules(this.Quill, this.config.customModules, this.config.suppressGlobalRegisterWarning);\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        return this.quill$;\n    }\n    /**\n     * Marked as internal so it won't be available for `ngx-quill` consumers, this is only\n     * internal method to be used within the library.\n     *\n     * @internal\n     */\n    async registerCustomModules(Quill, customModules, suppressGlobalRegisterWarning) {\n        if (Array.isArray(customModules)) {\n            // eslint-disable-next-line prefer-const\n            for (let { implementation, path } of customModules) {\n                // The `implementation` might be an observable that resolves the actual implementation,\n                // e.g. if it should be lazy loaded.\n                if (isObservable(implementation)) {\n                    implementation = await firstValueFrom(implementation);\n                }\n                Quill.register(path, implementation, suppressGlobalRegisterWarning);\n            }\n        }\n        // Return `Quill` constructor so we'll be able to re-use its return value except of using\n        // `map` operators, etc.\n        return Quill;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [QUILL_CONFIG_TOKEN]\n                }] }]; } });\n\nclass QuillEditorBase {\n    constructor() {\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.preserve = false;\n        this.toolbarPosition = 'top';\n        this.subscription = null;\n        this.quillSubscription = null;\n        this.elementRef = inject(ElementRef);\n        this.document = inject(DOCUMENT);\n        this.cd = inject(ChangeDetectorRef);\n        this.domSanitizer = inject(DomSanitizer);\n        this.platformId = inject(PLATFORM_ID);\n        this.renderer = inject(Renderer2);\n        this.zone = inject(NgZone);\n        this.service = inject(QuillService);\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                if (sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observed &&\n                !this.onFocus.observed &&\n                !this.onSelectionChanged.observed &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observed && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observed) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n        this.toolbarPosition = this.customToolbarPosition;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n        // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            // eslint-disable-next-line no-prototype-builtins\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = this.quillEditor?.theme?.tooltip;\n                    const input = tooltip?.root?.querySelector('input[data-link]');\n                    if (input?.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observed && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillEditorBase, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", styles: \"styles\", strict: \"strict\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillEditorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: QuillEditorComponent, isStandalone: true, selector: \"quill-editor\", providers: [\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            }\n        ], usesInheritance: true, ngImport: i0, template: `\n    <ng-template [ngIf]=\"toolbarPosition !== 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n    <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n    <ng-template [ngIf]=\"toolbarPosition === 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n    <ng-template #noPreserveTpl>\n      <div quill-editor-element></div>\n    </ng-template>\n  `, isInline: true, styles: [\":host{display:inline-block}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.Emulated, providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ], selector: 'quill-editor', template: `\n    <ng-template [ngIf]=\"toolbarPosition !== 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n    <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n    <ng-template [ngIf]=\"toolbarPosition === 'top'\">\n      <pre quill-editor-element *ngIf=\"preserve; else noPreserveTpl\"></pre>\n    </ng-template>\n    <ng-template #noPreserveTpl>\n      <div quill-editor-element></div>\n    </ng-template>\n  `, standalone: true, imports: [CommonModule], styles: [\":host{display:inline-block}\\n\"] }]\n        }] });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n            this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: QuillViewHTMLComponent, isStandalone: true, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view-html', template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i2.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: QuillService }]; }, propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.preserve = false;\n        this.quillSubscription = null;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                    if (sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        this.quillSubscription = this.service.getQuill().pipe(mergeMap((Quill) => {\n            const promises = [this.service.registerCustomModules(Quill, this.customModules)];\n            const beforeRender = this.beforeRender ?? this.service.config.beforeRender;\n            if (beforeRender) {\n                promises.push(beforeRender());\n            }\n            return Promise.all(promises).then(() => Quill);\n        })).subscribe(Quill => {\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n                this.onEditorCreated.complete();\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i2.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: QuillViewComponent, isStandalone: true, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", beforeRender: \"beforeRender\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, selector: 'quill-view', template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, standalone: true, imports: [CommonModule], styles: [\".ql-container.ngx-quill-view{border:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], beforeRender: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillModule, imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}