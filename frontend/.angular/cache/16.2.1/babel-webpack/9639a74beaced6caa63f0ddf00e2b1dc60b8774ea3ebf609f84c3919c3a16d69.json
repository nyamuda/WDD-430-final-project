{"ast":null,"code":"\"use strict\";\n\nvar _class;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nconst i2 = tslib_1.__importStar(require(\"ngx-toastr\"));\nclass AppService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    this._courses = new Array();\n    this.courseListSignal = (0, core_1.signal)(this._courses);\n  }\n  //Get a list of courses from from the database\n  getCourses(sort = 'rating') {\n    const url = `http://localhost:8000/courses?sort=${sort}`;\n    this.http.get(url).subscribe(courses => {\n      this._courses = courses;\n      this.courseListSignal.set(this._courses);\n    }, error => {\n      console.error(error);\n    });\n  }\n  //Toast\n  showSuccessToast(message, title = '', position = 'top-right') {\n    this.toastr.success(`${message}`, `${title}`, {\n      timeOut: 5000,\n      // progressAnimation: 'increasing',\n      // progressBar: true,\n      positionClass: `toast-${position}`\n    });\n  }\n  //Toast\n  showFailureToast(message, title = '', position = 'top-right') {\n    this.toastr.error(`${message}`, `${title}`, {\n      timeOut: 10000,\n      // progressAnimation: 'increasing',\n      // progressBar: true,\n      positionClass: `toast-${position}`\n    });\n  }\n}\n_class = AppService;\n_class.ɵfac = function AppService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexports.AppService = AppService;","map":{"version":3,"names":["core_1","require","AppService","constructor","http","toastr","_courses","Array","courseListSignal","signal","getCourses","sort","url","get","subscribe","courses","set","error","console","showSuccessToast","message","title","position","success","timeOut","positionClass","showFailureToast","i0","ɵɵinject","i1","HttpClient","i2","ToastrService","factory","ɵfac","providedIn","exports"],"sources":["C:\\Users\\Pierce T. Nyamuda\\Documents\\BYUI Courses\\spring2023\\Angular\\final-project\\frontend\\src\\app\\app.service.ts"],"sourcesContent":["import { Injectable, WritableSignal, signal } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Course } from './courses/course.model';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n  private _courses = new Array<Course>();\n  public courseListSignal: WritableSignal<Course[]> = signal(this._courses);\n\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\n\n  //Get a list of courses from from the database\n  getCourses(sort = 'rating'): void {\n    const url = `http://localhost:8000/courses?sort=${sort}`;\n\n    this.http.get<Course[]>(url).subscribe(\n      (courses: Course[]) => {\n        this._courses = courses;\n        this.courseListSignal.set(this._courses);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  //Toast\n  showSuccessToast(message: string, title = '', position = 'top-right') {\n    this.toastr.success(`${message}`, `${title}`, {\n      timeOut: 5000,\n      // progressAnimation: 'increasing',\n      // progressBar: true,\n      positionClass: `toast-${position}`,\n    });\n  }\n\n  //Toast\n  showFailureToast(message: string, title = '', position = 'top-right') {\n    this.toastr.error(`${message}`, `${title}`, {\n      timeOut: 10000,\n      // progressAnimation: 'increasing',\n      // progressBar: true,\n      positionClass: `toast-${position}`,\n    });\n  }\n}\n"],"mappings":";;;;;;;;AAAA,MAAAA,MAAA,GAAAC,OAAA;;;;AAKA,MAGaC,UAAU;EAIrBC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAH5C,KAAAC,QAAQ,GAAG,IAAIC,KAAK,EAAU;IAC/B,KAAAC,gBAAgB,GAA6B,IAAAR,MAAA,CAAAS,MAAM,EAAC,IAAI,CAACH,QAAQ,CAAC;EAEH;EAEtE;EACAI,UAAUA,CAACC,IAAI,GAAG,QAAQ;IACxB,MAAMC,GAAG,GAAG,sCAAsCD,IAAI,EAAE;IAExD,IAAI,CAACP,IAAI,CAACS,GAAG,CAAWD,GAAG,CAAC,CAACE,SAAS,CACnCC,OAAiB,IAAI;MACpB,IAAI,CAACT,QAAQ,GAAGS,OAAO;MACvB,IAAI,CAACP,gBAAgB,CAACQ,GAAG,CAAC,IAAI,CAACV,QAAQ,CAAC;IAC1C,CAAC,EACAW,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEA;EACAE,gBAAgBA,CAACC,OAAe,EAAEC,KAAK,GAAG,EAAE,EAAEC,QAAQ,GAAG,WAAW;IAClE,IAAI,CAACjB,MAAM,CAACkB,OAAO,CAAC,GAAGH,OAAO,EAAE,EAAE,GAAGC,KAAK,EAAE,EAAE;MAC5CG,OAAO,EAAE,IAAI;MACb;MACA;MACAC,aAAa,EAAE,SAASH,QAAQ;KACjC,CAAC;EACJ;EAEA;EACAI,gBAAgBA,CAACN,OAAe,EAAEC,KAAK,GAAG,EAAE,EAAEC,QAAQ,GAAG,WAAW;IAClE,IAAI,CAACjB,MAAM,CAACY,KAAK,CAAC,GAAGG,OAAO,EAAE,EAAE,GAAGC,KAAK,EAAE,EAAE;MAC1CG,OAAO,EAAE,KAAK;MACd;MACA;MACAC,aAAa,EAAE,SAASH,QAAQ;KACjC,CAAC;EACJ;;SAvCWpB,UAAU;;mBAAVA,MAAU,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;SAAV9B,MAAU;EAAA+B,OAAA,EAAV/B,MAAU,CAAAgC,IAAA;EAAAC,UAAA,EAFT;AAAM;AADpBC,OAAA,CAAAlC,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}