{"ast":null,"code":"\"use strict\";\n\nvar _class;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OauthComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"./oauth.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i3 = tslib_1.__importStar(require(\"../login.service\"));\nclass OauthComponent {\n  constructor(oauthService, route, loginService) {\n    this.oauthService = oauthService;\n    this.route = route;\n    this.loginService = loginService;\n    //action -sign up or sign in\n    this.action = '';\n    this.googleUrl = '';\n    this.facebookUrl = '';\n    /*Purpose: Execute the function that read the 'code' query parameter from the redirect URL of Oauth API\r\n    to get the access token.\r\n    Reason: If the component is nested and shown in the login and register tabs in login component,\r\n    we don't want the getOauthUserToken() function to get executed twice.*/\n    this.runUrlCodeParamFn = true;\n  }\n  ngOnInit() {\n    //OAUTH URLs START\n    this.oauthService.getOauthUrls().subscribe(urls => {\n      this.googleUrl = urls.googleUrl;\n      this.facebookUrl = urls.facebookUrl;\n    });\n    //OAUTH URLs END\n    //PARAMS START\n    this.route.queryParams.subscribe(params => {\n      let code = params['code'];\n      let stateFromUrl = params['state'];\n      //use the 'code' to get the access token from the server\n      if (this.runUrlCodeParamFn && code && stateFromUrl) {\n        this.getOauthUserToken(code, stateFromUrl);\n      }\n    });\n    //PARAMS END\n  }\n\n  googleLogin() {\n    //Generate the state parameter\n    let stateParameter = this.oauthService.generateRandomState(this.loginService.redirectUrl());\n    let url = `${this.googleUrl}&state=${stateParameter}`;\n    // Redirect to the Google OAuth login page\n    window.location.href = url;\n  }\n  facebookLogin() {\n    //Generate the state parameter\n    let stateParameter = this.oauthService.generateRandomState(this.loginService.redirectUrl());\n    let url = `${this.facebookUrl}&state=${stateParameter}`;\n    // Redirect to the Facebook OAuth login page\n    window.location.href = url;\n  }\n  //Use the 'code' in to get the access token from the server\n  getOauthUserToken(code, urlState) {\n    //compare the state parameters\n    if (this.oauthService.compareStates(urlState)) {\n      //Google redirect url and code\n      if (window.location.pathname.includes('/oauth/google/callback') && code) {\n        //use the code to get the JWT token\n        //from the server\n        this.oauthService.getGoogleUserJwtToken(code);\n      }\n      //Facebook redirect url and code\n      if (window.location.pathname.includes('/oauth/facebook/callback') && code) {\n        //use the code to get the JWT token\n        //from the server\n        this.oauthService.getFacebookUserJwtToken(code);\n      }\n    }\n  }\n}\n_class = OauthComponent;\n_class.ɵfac = function OauthComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.OauthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.LoginService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-oauth\"]],\n  inputs: {\n    action: \"action\",\n    runUrlCodeParamFn: \"runUrlCodeParamFn\"\n  },\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"text-center\", \"mb-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-block\", \"btn-primary\", \"d-flex\", \"align-items-center\", \"justify-content-center\", 2, \"background-color\", \"#dd4b39\", 3, \"click\"], [1, \"fab\", \"fa-google\", \"me-2\", \"fa-lg\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-block\", \"btn-primary\", \"mb-2\", \"d-flex\", \"align-items-center\", \"justify-content-center\", 2, \"background-color\", \"#3b5998\", 3, \"click\"], [1, \"fab\", \"fa-facebook-f\", \"me-2\", \"fa-lg\"], [1, \"text-center\"]],\n  template: function OauthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function OauthComponent_Template_button_click_3_listener() {\n        return ctx.googleLogin();\n      });\n      i0.ɵɵelement(4, \"i\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function OauthComponent_Template_button_click_6_listener() {\n        return ctx.facebookLogin();\n      });\n      i0.ɵɵelement(7, \"i\", 4);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"p\", 5);\n      i0.ɵɵtext(10, \"or:\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.action, \" with:\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.action, \" with Google \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"\", ctx.action, \" with Facebook \");\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexports.OauthComponent = OauthComponent;","map":{"version":3,"names":["OauthComponent","constructor","oauthService","route","loginService","action","googleUrl","facebookUrl","runUrlCodeParamFn","ngOnInit","getOauthUrls","subscribe","urls","queryParams","params","code","stateFromUrl","getOauthUserToken","googleLogin","stateParameter","generateRandomState","redirectUrl","url","window","location","href","facebookLogin","urlState","compareStates","pathname","includes","getGoogleUserJwtToken","getFacebookUserJwtToken","i0","ɵɵdirectiveInject","i1","OauthService","i2","ActivatedRoute","i3","LoginService","selectors","inputs","decls","vars","consts","template","OauthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","OauthComponent_Template_button_click_3_listener","ɵɵelement","OauthComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵtextInterpolate1","exports"],"sources":["C:\\Users\\Pierce T. Nyamuda\\Documents\\BYUI Courses\\spring2023\\Angular\\final-project\\frontend\\src\\app\\login\\oauth\\oauth.component.ts","C:\\Users\\Pierce T. Nyamuda\\Documents\\BYUI Courses\\spring2023\\Angular\\final-project\\frontend\\src\\app\\login\\oauth\\oauth.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { OauthService, OauthUrls } from './oauth.service';\n\n@Component({\n  selector: 'app-oauth',\n  templateUrl: './oauth.component.html',\n  styleUrls: ['./oauth.component.scss'],\n})\nexport class OauthComponent implements OnInit {\n  //action -sign up or sign in\n  @Input() action = '';\n  googleUrl = '';\n  facebookUrl = '';\n\n  /*Purpose: Execute the function that read the 'code' query parameter from the redirect URL of Oauth API \n  to get the access token.\n  Reason: If the component is nested and shown in the login and register tabs in login component, \n  we don't want the getOauthUserToken() function to get executed twice.*/\n  @Input() runUrlCodeParamFn: boolean = true;\n\n  constructor(\n    private oauthService: OauthService,\n    private route: ActivatedRoute,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    //OAUTH URLs START\n    this.oauthService.getOauthUrls().subscribe((urls: OauthUrls) => {\n      this.googleUrl = urls.googleUrl;\n      this.facebookUrl = urls.facebookUrl;\n    });\n    //OAUTH URLs END\n\n    //PARAMS START\n    this.route.queryParams.subscribe((params) => {\n      let code = params['code'];\n      let stateFromUrl = params['state'];\n\n      //use the 'code' to get the access token from the server\n      if (this.runUrlCodeParamFn && code && stateFromUrl) {\n        this.getOauthUserToken(code, stateFromUrl);\n      }\n    });\n    //PARAMS END\n  }\n\n  googleLogin() {\n    //Generate the state parameter\n    let stateParameter = this.oauthService.generateRandomState(\n      this.loginService.redirectUrl()\n    );\n\n    let url = `${this.googleUrl}&state=${stateParameter}`;\n    // Redirect to the Google OAuth login page\n    window.location.href = url;\n  }\n\n  facebookLogin() {\n    //Generate the state parameter\n    let stateParameter = this.oauthService.generateRandomState(\n      this.loginService.redirectUrl()\n    );\n\n    let url = `${this.facebookUrl}&state=${stateParameter}`;\n    // Redirect to the Facebook OAuth login page\n    window.location.href = url;\n  }\n\n  //Use the 'code' in to get the access token from the server\n  getOauthUserToken(code: string, urlState: string) {\n    //compare the state parameters\n    if (this.oauthService.compareStates(urlState)) {\n      //Google redirect url and code\n      if (window.location.pathname.includes('/oauth/google/callback') && code) {\n        //use the code to get the JWT token\n        //from the server\n        this.oauthService.getGoogleUserJwtToken(code);\n      }\n\n      //Facebook redirect url and code\n      if (\n        window.location.pathname.includes('/oauth/facebook/callback') &&\n        code\n      ) {\n        //use the code to get the JWT token\n        //from the server\n        this.oauthService.getFacebookUserJwtToken(code);\n      }\n    }\n  }\n}\n","<div class=\"text-center mb-3\">\n  <p>{{ action }} with:</p>\n  <button\n    (click)=\"googleLogin()\"\n    class=\"btn btn-lg btn-block btn-primary d-flex align-items-center justify-content-center\"\n    style=\"background-color: #dd4b39\"\n    type=\"submit\"\n  >\n    <i class=\"fab fa-google me-2 fa-lg\"></i> {{ action }} with Google\n  </button>\n  <button\n    (click)=\"facebookLogin()\"\n    class=\"btn btn-lg btn-block btn-primary mb-2 d-flex align-items-center justify-content-center\"\n    style=\"background-color: #3b5998\"\n    type=\"submit\"\n  >\n    <i class=\"fab fa-facebook-f me-2 fa-lg\"></i>{{ action }} with Facebook\n  </button>\n</div>\n<p class=\"text-center\">or:</p>\n"],"mappings":";;;;;;;;;;;;AAKA,MAKaA,cAAc;EAYzBC,YACUC,YAA0B,EAC1BC,KAAqB,EACrBC,YAA0B;IAF1B,KAAAF,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IAdtB;IACS,KAAAC,MAAM,GAAG,EAAE;IACpB,KAAAC,SAAS,GAAG,EAAE;IACd,KAAAC,WAAW,GAAG,EAAE;IAEhB;;;;IAIS,KAAAC,iBAAiB,GAAY,IAAI;EAMvC;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACP,YAAY,CAACQ,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAe,IAAI;MAC7D,IAAI,CAACN,SAAS,GAAGM,IAAI,CAACN,SAAS;MAC/B,IAAI,CAACC,WAAW,GAAGK,IAAI,CAACL,WAAW;IACrC,CAAC,CAAC;IACF;IAEA;IACA,IAAI,CAACJ,KAAK,CAACU,WAAW,CAACF,SAAS,CAAEG,MAAM,IAAI;MAC1C,IAAIC,IAAI,GAAGD,MAAM,CAAC,MAAM,CAAC;MACzB,IAAIE,YAAY,GAAGF,MAAM,CAAC,OAAO,CAAC;MAElC;MACA,IAAI,IAAI,CAACN,iBAAiB,IAAIO,IAAI,IAAIC,YAAY,EAAE;QAClD,IAAI,CAACC,iBAAiB,CAACF,IAAI,EAAEC,YAAY,CAAC;;IAE9C,CAAC,CAAC;IACF;EACF;;EAEAE,WAAWA,CAAA;IACT;IACA,IAAIC,cAAc,GAAG,IAAI,CAACjB,YAAY,CAACkB,mBAAmB,CACxD,IAAI,CAAChB,YAAY,CAACiB,WAAW,EAAE,CAChC;IAED,IAAIC,GAAG,GAAG,GAAG,IAAI,CAAChB,SAAS,UAAUa,cAAc,EAAE;IACrD;IACAI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,GAAG;EAC5B;EAEAI,aAAaA,CAAA;IACX;IACA,IAAIP,cAAc,GAAG,IAAI,CAACjB,YAAY,CAACkB,mBAAmB,CACxD,IAAI,CAAChB,YAAY,CAACiB,WAAW,EAAE,CAChC;IAED,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACf,WAAW,UAAUY,cAAc,EAAE;IACvD;IACAI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,GAAG;EAC5B;EAEA;EACAL,iBAAiBA,CAACF,IAAY,EAAEY,QAAgB;IAC9C;IACA,IAAI,IAAI,CAACzB,YAAY,CAAC0B,aAAa,CAACD,QAAQ,CAAC,EAAE;MAC7C;MACA,IAAIJ,MAAM,CAACC,QAAQ,CAACK,QAAQ,CAACC,QAAQ,CAAC,wBAAwB,CAAC,IAAIf,IAAI,EAAE;QACvE;QACA;QACA,IAAI,CAACb,YAAY,CAAC6B,qBAAqB,CAAChB,IAAI,CAAC;;MAG/C;MACA,IACEQ,MAAM,CAACC,QAAQ,CAACK,QAAQ,CAACC,QAAQ,CAAC,0BAA0B,CAAC,IAC7Df,IAAI,EACJ;QACA;QACA;QACA,IAAI,CAACb,YAAY,CAAC8B,uBAAuB,CAACjB,IAAI,CAAC;;;EAGrD;;SAlFWf,cAAc;;mBAAdA,MAAc,EAAAiC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,YAAA;AAAA;;QAAdxC,MAAc;EAAAyC,SAAA;EAAAC,MAAA;IAAArC,MAAA;IAAAG,iBAAA;EAAA;EAAAmC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV3Bf,EAAA,CAAAiB,cAAA,aAA8B;MACzBjB,EAAA,CAAAkB,MAAA,GAAkB;MAAAlB,EAAA,CAAAmB,YAAA,EAAI;MACzBnB,EAAA,CAAAiB,cAAA,gBAKC;MAJCjB,EAAA,CAAAoB,UAAA,mBAAAC,gDAAA;QAAA,OAASL,GAAA,CAAA/B,WAAA,EAAa;MAAA,EAAC;MAKvBe,EAAA,CAAAsB,SAAA,WAAwC;MAACtB,EAAA,CAAAkB,MAAA,GAC3C;MAAAlB,EAAA,CAAAmB,YAAA,EAAS;MACTnB,EAAA,CAAAiB,cAAA,gBAKC;MAJCjB,EAAA,CAAAoB,UAAA,mBAAAG,gDAAA;QAAA,OAASP,GAAA,CAAAvB,aAAA,EAAe;MAAA,EAAC;MAKzBO,EAAA,CAAAsB,SAAA,WAA4C;MAAAtB,EAAA,CAAAkB,MAAA,GAC9C;MAAAlB,EAAA,CAAAmB,YAAA,EAAS;MAEXnB,EAAA,CAAAiB,cAAA,WAAuB;MAAAjB,EAAA,CAAAkB,MAAA,WAAG;MAAAlB,EAAA,CAAAmB,YAAA,EAAI;;;MAlBzBnB,EAAA,CAAAwB,SAAA,GAAkB;MAAlBxB,EAAA,CAAAyB,kBAAA,KAAAT,GAAA,CAAA5C,MAAA,WAAkB;MAOsB4B,EAAA,CAAAwB,SAAA,GAC3C;MAD2CxB,EAAA,CAAAyB,kBAAA,MAAAT,GAAA,CAAA5C,MAAA,kBAC3C;MAO8C4B,EAAA,CAAAwB,SAAA,GAC9C;MAD8CxB,EAAA,CAAAyB,kBAAA,KAAAT,GAAA,CAAA5C,MAAA,oBAC9C;;;;;ADZFsD,OAAA,CAAA3D,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}