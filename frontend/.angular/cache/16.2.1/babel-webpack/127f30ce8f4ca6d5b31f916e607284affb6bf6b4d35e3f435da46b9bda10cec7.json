{"ast":null,"code":"\"use strict\";\n\nvar _class;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst user_model_1 = require(\"../users/user.model\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/forms\"));\nconst i2 = tslib_1.__importStar(require(\"./login.service\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i4 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i5 = tslib_1.__importStar(require(\"mdb-angular-ui-kit/tabs\"));\nconst i6 = tslib_1.__importStar(require(\"../register/register.component\"));\nconst i7 = tslib_1.__importStar(require(\"./oauth/oauth.component\"));\nfunction LoginComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"LOGIN\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Please enter a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Your password should have a minimum length of 8 characters and include a combination of letters, and numbers. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\nfunction LoginComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.submitForm());\n    });\n    i0.ɵɵtext(1, \" Log in \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r3.loginFormGroup.invalid));\n  }\n}\nfunction LoginComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵelement(1, \"span\", 23);\n    i0.ɵɵelementStart(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Please wait...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"REGISTER\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass LoginComponent {\n  constructor(formBuilder, loginService, route) {\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n    this.route = route;\n    this.rememberMe = false;\n    //show the loading button when registration is in progress\n    this.logging = (0, core_1.computed)(() => this.loginService.isLoggingIn());\n  }\n  ngOnInit() {\n    //FORM GROUP START\n    this.loginFormGroup = this.formBuilder.group({\n      email: ['', [forms_1.Validators.required, forms_1.Validators.email]],\n      password: ['', [forms_1.Validators.required, forms_1.Validators.minLength(8)\n      // Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\n      ]]\n    });\n    //FORM GROUP END\n  }\n\n  submitForm() {\n    if (this.loginFormGroup.valid) {\n      //get the input values\n      let email = this.loginFormGroup.get('email').value;\n      let password = this.loginFormGroup.get('password').value;\n      let user = new user_model_1.User();\n      user.email = email;\n      user.password = password;\n      //remember the user or not on log in\n      this.loginService.rememberMe.set(this.rememberMe);\n      //log in the user\n      this.loginService.login(user);\n    }\n  }\n  //Remember checkbox\n  onCheckboxCheck() {\n    this.rememberMe = !this.rememberMe;\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 31,\n  vars: 16,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"fill\"], [\"mdbTabTitle\", \"\"], [\"novalidate\", \"\", 1, \"needs-validation\", 3, \"formGroup\"], [\"action\", \"Sign in\", 3, \"runUrlCodeParamFn\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"email\", \"id\", \"loginEmail\", \"formControlName\", \"email\", \"placeholder\", \"name@example.com\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"loginEmail\", 1, \"form-label\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"password\", 1, \"form-label\"], [1, \"form-check\", \"form-switch\", \"mb-3\"], [\"type\", \"checkbox\", \"id\", \"flexSwitchCheckDefault\", 1, \"form-check-input\", 3, \"ngClass\", \"change\"], [\"for\", \"flexSwitchCheckDefault\", 1, \"form-check-label\"], [\"type\", \"submit\", \"class\", \"btn custom text-light btn-block mb-3\", 3, \"ngClass\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"loadingBtn\", \"\"], [1, \"text-center\"], [\"routerLink\", \"/register\"], [\"topMargin\", \"0\"], [1, \"fw-bold\"], [1, \"invalid-feedback\"], [\"type\", \"submit\", 1, \"btn\", \"custom\", \"text-light\", \"btn-block\", \"mb-3\", 3, \"ngClass\", \"click\"], [\"type\", \"button\", \"disabled\", \"\", 1, \"btn\", \"custom\", \"text-light\", \"btn-block\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"], [1, \"ms-1\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mdb-tabs\", 1)(2, \"mdb-tab\");\n      i0.ɵɵtemplate(3, LoginComponent_ng_template_3_Template, 2, 0, \"ng-template\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3);\n      i0.ɵɵelement(5, \"app-oauth\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementStart(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5);\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵelementStart(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 11)(17, \"input\", 12);\n      i0.ɵɵlistener(\"change\", function LoginComponent_Template_input_change_17_listener() {\n        return ctx.onCheckboxCheck();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Remember me\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(20, LoginComponent_button_20_Template, 2, 3, \"button\", 14);\n      i0.ɵɵtemplate(21, LoginComponent_ng_template_21_Template, 4, 0, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(23, \"div\", 16)(24, \"p\");\n      i0.ɵɵtext(25, \"Not a member? \");\n      i0.ɵɵelementStart(26, \"a\", 17);\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(28, \"mdb-tab\");\n      i0.ɵɵtemplate(29, LoginComponent_ng_template_29_Template, 2, 0, \"ng-template\", 2);\n      i0.ɵɵelement(30, \"app-register\", 18);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(22);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"fill\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginFormGroup);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"runUrlCodeParamFn\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c1, ctx.loginFormGroup.get(\"email\").invalid && ctx.loginFormGroup.get(\"email\").touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginFormGroup.get(\"email\").invalid && ctx.loginFormGroup.get(\"email\").touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx.loginFormGroup.get(\"password\").invalid && ctx.loginFormGroup.get(\"password\").touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginFormGroup.get(\"password\").invalid && ctx.loginFormGroup.get(\"password\").touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.loginFormGroup.invalid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.logging())(\"ngIfElse\", _r4);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i5.MdbTabComponent, i5.MdbTabTitleDirective, i5.MdbTabsComponent, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.RegisterComponent, i7.OauthComponent],\n  styles: [\"@import url(https://fonts.googleapis.com/css2?family=Oxygen&display=swap);@import url(https://fonts.googleapis.com/css2?family=Merriweather+Sans&display=swap);@import url(https://fonts.googleapis.com/css2?family=Rammetto+One&display=swap);.heading-line[_ngcontent-%COMP%] {\\n  border: 2px solid #f24711;\\n  width: 2rem;\\n  margin-bottom: 0rem;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  height: 3rem;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  margin: auto;\\n  width: 95%;\\n}\\n\\n@media (min-width: 768px) {\\n  .container[_ngcontent-%COMP%] {\\n    width: 30rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9QaWVyY2UlMjBULiUyME55YW11ZGEvRG9jdW1lbnRzL0JZVUklMjBDb3Vyc2VzL3NwcmluZzIwMjMvQW5ndWxhci9maW5hbC1wcm9qZWN0L2Zyb250ZW5kL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtBQ0VGOztBRENBO0VBQ0UsWUFBQTtBQ0VGOztBRENBO0VBQ0UsWUFBQTtFQUNBLFVBQUE7QUNFRjs7QURDQTtFQUNFO0lBQ0UsWUFBQTtFQ0VGO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi4vLi4vc2Fzcy9fdmFyaWFibGVzXCI7XHJcblxyXG4uaGVhZGluZy1saW5lIHtcclxuICBib3JkZXI6IDJweCBzb2xpZCAkcHJpbWFyeS1jb2xvcjtcclxuICB3aWR0aDogMnJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAwcmVtO1xyXG59XHJcblxyXG4uYnRuIHtcclxuICBoZWlnaHQ6IDNyZW07XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB3aWR0aDogOTUlO1xyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAuY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiAzMHJlbTtcclxuICB9XHJcbn1cclxuIiwiQGltcG9ydCB1cmwoXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU94eWdlbiZkaXNwbGF5PXN3YXBcIik7XG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TWVycml3ZWF0aGVyK1NhbnMmZGlzcGxheT1zd2FwXCIpO1xuQGltcG9ydCB1cmwoXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJhbW1ldHRvK09uZSZkaXNwbGF5PXN3YXBcIik7XG4uaGVhZGluZy1saW5lIHtcbiAgYm9yZGVyOiAycHggc29saWQgI2YyNDcxMTtcbiAgd2lkdGg6IDJyZW07XG4gIG1hcmdpbi1ib3R0b206IDByZW07XG59XG5cbi5idG4ge1xuICBoZWlnaHQ6IDNyZW07XG59XG5cbi5jb250YWluZXIge1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiA5NSU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29udGFpbmVyIHtcbiAgICB3aWR0aDogMzByZW07XG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexports.LoginComponent = LoginComponent;","map":{"version":3,"names":["core_1","require","forms_1","user_model_1","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","submitForm","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r3","loginFormGroup","invalid","ɵɵelement","LoginComponent","constructor","formBuilder","loginService","route","rememberMe","logging","computed","isLoggingIn","ngOnInit","group","email","Validators","required","password","minLength","valid","get","value","user","User","set","login","onCheckboxCheck","ɵɵdirectiveInject","i1","FormBuilder","i2","LoginService","i3","ActivatedRoute","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_ng_template_3_Template","LoginComponent_div_10_Template","LoginComponent_div_15_Template","LoginComponent_Template_input_change_17_listener","LoginComponent_button_20_Template","LoginComponent_ng_template_21_Template","ɵɵtemplateRefExtractor","LoginComponent_ng_template_29_Template","ɵɵadvance","_c1","touched","_r4","exports"],"sources":["C:\\Users\\Pierce T. Nyamuda\\Documents\\BYUI Courses\\spring2023\\Angular\\final-project\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\Pierce T. Nyamuda\\Documents\\BYUI Courses\\spring2023\\Angular\\final-project\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit, Signal, computed } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { LoginService } from './login.service';\nimport { User } from '../users/user.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { url } from 'inspector';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: FormGroup;\n  rememberMe: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    //FORM GROUP START\n    this.loginFormGroup = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          // Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$'),\n        ],\n      ],\n    });\n    //FORM GROUP END\n  }\n\n  submitForm() {\n    if (this.loginFormGroup.valid) {\n      //get the input values\n      let email = this.loginFormGroup.get('email').value;\n      let password = this.loginFormGroup.get('password').value;\n\n      let user = new User();\n      user.email = email;\n      user.password = password;\n\n      //remember the user or not on log in\n      this.loginService.rememberMe.set(this.rememberMe);\n\n      //log in the user\n      this.loginService.login(user);\n    }\n  }\n\n  //show the loading button when registration is in progress\n  logging: Signal<boolean> = computed(() => this.loginService.isLoggingIn());\n\n  //Remember checkbox\n  onCheckboxCheck() {\n    this.rememberMe = !this.rememberMe;\n  }\n}\n","<div class=\"container mt-5\">\n  <mdb-tabs [fill]=\"true\">\n    <mdb-tab>\n      <ng-template mdbTabTitle>\n        <span class=\"fw-bold\">LOGIN</span>\n      </ng-template>\n      <form [formGroup]=\"loginFormGroup\" class=\"needs-validation\" novalidate>\n        <!-- Sign in with Google -->\n        <app-oauth [runUrlCodeParamFn]=\"false\" action=\"Sign in\"></app-oauth>\n        <!-- Email input -->\n        <div class=\"form-floating mb-3\">\n          <input\n            [ngClass]=\"{\n              'is-invalid':\n                loginFormGroup.get('email').invalid &&\n                loginFormGroup.get('email').touched\n            }\"\n            type=\"email\"\n            id=\"loginEmail\"\n            class=\"form-control\"\n            formControlName=\"email\"\n            placeholder=\"name@example.com\"\n          />\n          <label class=\"form-label\" for=\"loginEmail\">Email</label>\n          <div\n            *ngIf=\"\n              loginFormGroup.get('email').invalid &&\n              loginFormGroup.get('email').touched\n            \"\n            class=\"invalid-feedback\"\n          >\n            Please enter a valid email address.\n          </div>\n        </div>\n\n        <!-- Password input -->\n        <div class=\"form-floating mb-3\">\n          <input\n            [ngClass]=\"{\n              'is-invalid':\n                loginFormGroup.get('password').invalid &&\n                loginFormGroup.get('password').touched\n            }\"\n            type=\"password\"\n            id=\"password\"\n            class=\"form-control\"\n            formControlName=\"password\"\n            placeholder=\"Password\"\n          />\n          <label class=\"form-label\" for=\"password\">Password</label>\n          <div\n            *ngIf=\"\n              loginFormGroup.get('password').invalid &&\n              loginFormGroup.get('password').touched\n            \"\n            class=\"invalid-feedback\"\n          >\n            Your password should have a minimum length of 8 characters and\n            include a combination of letters, and numbers.\n          </div>\n        </div>\n        <!-- Remember me checkbox -->\n        <div class=\"form-check form-switch mb-3\">\n          <input\n            [ngClass]=\"{ disabled: loginFormGroup.invalid }\"\n            (change)=\"onCheckboxCheck()\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckDefault\"\n          />\n          <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\"\n            >Remember me</label\n          >\n        </div>\n\n        <!-- Submit button -->\n        <button\n          [ngClass]=\"{ disabled: loginFormGroup.invalid }\"\n          *ngIf=\"!logging(); else loadingBtn\"\n          (click)=\"submitForm()\"\n          type=\"submit\"\n          class=\"btn custom text-light btn-block mb-3\"\n        >\n          Log in\n        </button>\n        <!-- <button (click)=\"hello()\" class=\"btn btn-danger\">Toast</button> -->\n\n        <!-- Loading button -->\n        <ng-template #loadingBtn>\n          <button\n            class=\"btn custom text-light btn-block\"\n            type=\"button\"\n            disabled\n          >\n            <span\n              class=\"spinner-border spinner-border-sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            ></span>\n            <span class=\"ms-1\">Please wait...</span>\n          </button>\n        </ng-template>\n\n        <!-- Register buttons -->\n        <div class=\"text-center\">\n          <p>Not a member? <a routerLink=\"/register\">Register</a></p>\n        </div>\n      </form>\n    </mdb-tab>\n    <mdb-tab>\n      <ng-template mdbTabTitle>\n        <span class=\"fw-bold\">REGISTER</span>\n      </ng-template>\n      <app-register topMargin=\"0\"></app-register>\n    </mdb-tab>\n  </mdb-tabs>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}